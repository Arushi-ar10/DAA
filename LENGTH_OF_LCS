/* length of longest common subsequence*/
#include <bits/stdc++.h>
using namespace std;
int max(int a, int b);
int lcs(char* str1, char* str2, int l1, int l2)
{
	int L[l1 + 1][l2 + 1], i , j;
	for (i = 0; i <= l1; i++) 
	{
		for (j = 0; j <= l2; j++) 
		{
			if (i == 0 || j == 0)
				L[i][j] = 0;

			else if (str1[i - 1] == str2[j - 1])
				L[i][j] = L[i - 1][j - 1] + 1;
			else
				L[i][j] = max(L[i - 1][j], L[i][j - 1]);
		}
	}
	return L[l1][l2];
	
}
int max(int a, int b)
{
	return (a > b) ? a : b;
}
int main()
{ 
    int l1, l2, len;
    char str1[10], str2[10];
    cout<<"enter 2 strings:\n";
    cin>>str1>>str2;
	l1 = strlen(str1);
	l2 = strlen(str2);
	len = lcs(str1, str2, l1, l2);
    cout<<"Length of the Longest Common Subsequence is: "<<len;

    return 0;
}
